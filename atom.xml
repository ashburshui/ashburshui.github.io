<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>當下</title>
  
  
  <link href="https://ashburshui.github.io/atom.xml" rel="self"/>
  
  <link href="https://ashburshui.github.io/"/>
  <updated>2025-07-28T14:00:24.758Z</updated>
  <id>https://ashburshui.github.io/</id>
  
  <author>
    <name>ashburshui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Take &quot;Risks&quot;</title>
    <link href="https://ashburshui.github.io/2030/12/31/%22life%22%20work/Take%20%22Risks%22/"/>
    <id>https://ashburshui.github.io/2030/12/31/%22life%22%20work/Take%20%22Risks%22/</id>
    <published>2030-12-31T05:00:00.000Z</published>
    <updated>2025-07-28T14:00:24.758Z</updated>
    
    <content type="html"><![CDATA[<p><u>大视角和小视角…勇气和好奇心，探索和服务的快乐</u><br><span id="more"></span></p><p><img src="/blog-images/earthrise.jpg" alt=""></p><p><mark>“Show up, say “Hi”!, get the work done”…</mark></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">卡森说，他无法告诉毕业的同学如何才能得到幸福，但能够根据个人经验，告诉他们如何保证自己过上痛苦的生活。卡森给的确保痛苦生活的处方包括：</span><br><span class="line">1. 为了改变心情或者感觉而使用化学物质</span><br><span class="line">2. 妒忌</span><br><span class="line">3. 怨恨</span><br><span class="line"></span><br><span class="line">我现在还能想起来当时卡森用言之凿凿的口气说，他一次又一次地尝试了这些东西，结果每次都变得很痛苦，芒格的四味药，</span><br><span class="line"></span><br><span class="line">1. 要反复无常，不要虔诚地做你正在做的事。</span><br><span class="line">2. 尽可能从你们自身的经验获得知识，尽量别从其他人成功或失败的经验中广泛地吸取教训，不管他们是古人还是今人。</span><br><span class="line">3. 当你们在人生的战场上遭遇第一、第二或者第三次严重的失败时，就请意志消沉，从此一蹶不振吧。</span><br><span class="line">4. 为了过上头脑混乱、痛苦不堪的日子，请忽略小时候人们告诉我的那个乡下人故事：曾经有个乡下人说：“要是知道我会死在哪里就好啦，那我将永远不去那个地方”。</span><br></pre></td></tr></table></figure><p><u>EQ,IQ &amp; micro-sessions。。。看人的能力，character…</u></p><p><img src="/blog-images/brain-1.png" alt=""></p><p><del>New to the world… —&gt;&gt; 1997 —&gt;&gt; 2002(学业方面，该做的事情逃避了么？) —&gt;&gt; 2005 —&gt;&gt; 2008(课程，实事求是学好了么？) —&gt;&gt; 2009 —&gt;&gt; 2013 —&gt;&gt; 2015(intern的价值观) —&gt;&gt; 2016 —&gt;&gt; 2018(工作上遇到问题的根源？) —&gt;&gt; 2022 —&gt;&gt; 2025…</del> —&gt;&gt; <mark>uncertainty(朦胧的直觉…), but have confidence on the table(for past, let it go…)</mark></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生活是概率问题，根本没有预测这一回事，所以微操作是：</span><br><span class="line"></span><br><span class="line">1. “是否要弄清楚事情为何失败，是一个哲学问题，厘清每一个小差错的习惯性思维并不一定是最好的方法”。</span><br><span class="line">2. 要提纲挈领看待问题，只有那些关键的、不找到失败原因就无法前行的事情才需要刨根究源。</span><br><span class="line">3. 不必追求完美，而是应该义无反顾地把事情一步步推到终点，看看可否得到大致与假设相符的总体结果。</span><br><span class="line">4. 布朗运动不要紧，只要I.清晰定义目标函数，II.有办法评估结果，有逻辑地分析负面效果，就是非常好的情况。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;u&gt;大视角和小视角…勇气和好奇心，探索和服务的快乐&lt;/u&gt;&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Micro Sessions</title>
    <link href="https://ashburshui.github.io/2025/08/15/session/micro_sessions/"/>
    <id>https://ashburshui.github.io/2025/08/15/session/micro_sessions/</id>
    <published>2025-08-15T04:00:00.000Z</published>
    <updated>2025-08-26T02:23:47.983Z</updated>
    
    <content type="html"><![CDATA[<p>Keep practicing… reading, coding, do all you can do… “唯手熟尔”，不理解的地方跳过去，这个对锻炼思维非常有用。<br><span id="more"></span></p><p>Coding,</p><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">-</th></tr></thead><tbody><tr><td style="text-align:left">17</td><td style="text-align:left"><del>Letter Combinations of a Phone Number</del></td></tr><tr><td style="text-align:left">20</td><td style="text-align:left"><del>Valid Parentheses</del></td></tr><tr><td style="text-align:left">21</td><td style="text-align:left"><del>Merge Two Sorted Lists</del></td></tr><tr><td style="text-align:left">26</td><td style="text-align:left"><del>Remove Duplicates from Sorted Array</del></td></tr><tr><td style="text-align:left">27</td><td style="text-align:left"><del>Remove Element</del></td></tr><tr><td style="text-align:left">58</td><td style="text-align:left"><del>Length of Last Word</del></td></tr><tr><td style="text-align:left">80</td><td style="text-align:left"><del>Remove Duplicates from Sorted Array II</del></td></tr><tr><td style="text-align:left">100</td><td style="text-align:left"><del>Same Tree</del></td></tr><tr><td style="text-align:left">101</td><td style="text-align:left"><del>Symmetric Tree</del></td></tr><tr><td style="text-align:left">125</td><td style="text-align:left"><del>Valid Palindrome(…isLetterOrDigit)</del></td></tr><tr><td style="text-align:left">129</td><td style="text-align:left"><del>Sum Root to Leaf Numbers</del></td></tr><tr><td style="text-align:left">151</td><td style="text-align:left"><del>Reverse Words in a String</del></td></tr><tr><td style="text-align:left">189</td><td style="text-align:left">~~Rotate Array</td></tr><tr><td style="text-align:left">392</td><td style="text-align:left"><del>Is Subsequence</del></td></tr><tr><td style="text-align:left">547</td><td style="text-align:left"><del>Number of Provinces</del></td></tr><tr><td style="text-align:left">1020</td><td style="text-align:left"><del>Number of Enclaves</del>, stuble difference for similar questions… etc</td></tr></tbody></table></div><p>System Design, <a href="https://en.wikipedia.org/wiki/CAP_theorem">CAP</a> trade-off??? Think about this issue,</p><p><img src="/blog-images/CAP.png" alt=""></p><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">-</th></tr></thead><tbody><tr><td style="text-align:left">0</td><td style="text-align:left">API gateway… etc.</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">Consistent Hashing</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><del>News Feeds, solve the pressure for fanout service.</del></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><del>Chat System</del>, sender protocol vs. receiver… 1-1, groups, inbox queue, etc… why?</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">Video Platform, like Youtube, etc… scalibility etc.</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><del>A Web Crawler, avoid redundant request, think about the usage of this…</del></td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><del>Real-time Gaming Leaderboard</del>, why Redis?</td></tr></tbody></table></div><blockquote><p>Resources,</p></blockquote><p>Two books, from Alex Xu, I had read them already,</p><ul><li><del>System Design Interview – An insider’s guide</del></li><li><del>System Design Interview – An Insider’s Guide: Volume 2</del></li></ul><p>Reference papers in books, also good to read,</p><p>… etc… // TODO</p><p>Github repos and websites,</p><ul><li><a href="https://highscalability.com/">https://highscalability.com/</a></li><li><del><a href="https://github.com/donnemartin/system-design-primer/tree/master">https://github.com/donnemartin/system-design-primer/tree/master</a></del></li></ul><p>Database scaling solution,</p><ul><li>Concepts: <del>master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.</del></li></ul><p>API and OO Design,</p><ul><li><a href="https://github.com/tssovi/grokking-the-object-oriented-design-interview">https://github.com/tssovi/grokking-the-object-oriented-design-interview</a></li><li><a href="https://github.com/ashishps1/awesome-low-level-design">https://github.com/ashishps1/awesome-low-level-design</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Keep practicing… reading, coding, do all you can do… “唯手熟尔”，不理解的地方跳过去，这个对锻炼思维非常有用。&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>干活</title>
    <link href="https://ashburshui.github.io/2024/10/04/%22life%22%20work/%E5%B9%B2%E6%B4%BB/"/>
    <id>https://ashburshui.github.io/2024/10/04/%22life%22%20work/%E5%B9%B2%E6%B4%BB/</id>
    <published>2024-10-04T04:00:00.000Z</published>
    <updated>2025-07-22T20:27:56.037Z</updated>
    
    <content type="html"><![CDATA[<p>运营自己，”enjoy the messy stuff”<br><span id="more"></span></p><p>其实，以下都是为业务服务的，以搜广推…etc…为主线，不断学习，知道怎么做能带来业务价值。</p><p><a href="https://conanhujinming.github.io/comments-for-awesome-courses/">名校公开课程评价网</a></p><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">-</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://missing.csail.mit.edu/">https://missing.csail.mit.edu/</a> 工具&amp;习惯，很有好处，勤快点</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">15-213/15-513/14-513 Introduction to Computer Systems (ICS)</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://dlsyscourse.org/">https://dlsyscourse.org/</a></td></tr></tbody></table></div><p>[开源项目]</p><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">-</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://github.com/apache/incubator-livy">https://github.com/apache/incubator-livy</a></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">-</td></tr></tbody></table></div><p><a href="https://github.com/rxin/db-readings">Reading List</a></p><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">-</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><del>Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing</del></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><del>MapReduce: Simplified Data Processing on Large Clusters</del></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">Dynamo: Amazon’s Highly Available Key-value Store</td></tr></tbody></table></div><p>⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️</p><blockquote><p>Part 000, <a href="https://leetcode.com/">Coding</a>…</p><p>Part I, System Design</p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">Quiz</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><del>Design Pastebin.com (or Bit.ly)</del></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><del>Design the Twitter timeline and search (or Facebook feed and search)</del></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><del>Design a web crawler</del></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><del>Design Mint.com</del></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><del>Design the data structures for a social network</del></td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">Design a key-value store for a search engine</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><del>Design Amazon’s sales ranking by category feature</del></td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">Design a system that scales to millions of users on AWS</td></tr></tbody></table></div><blockquote><p>Part II, ML Related</p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:left">No.</th><th style="text-align:left">Quiz</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">-</td></tr></tbody></table></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;运营自己，”enjoy the messy stuff”&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
